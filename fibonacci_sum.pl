#!/usr/bin/perl
use strict;

# John Bessire March 29, 2012
#
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By 
# starting with 1 and 2, the first 10 terms will be:
#
#             1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
# find the sum of the even-valued terms.

my ($max_terms); # Maximum number of terms in sequence
my ($first_term, $second_term);  # First two numbers of the sequence
my ($sum_of_all_numbers, $sum_of_even_numbers, $sum_of_odd_numbers); # Sum of even and odd numbers
my ($x, $temp); # Loop and temporary variables

$max_terms = $ARGV[0];
if ($max_terms <= 2) {$max_terms = 10;}


$first_term = 1;  
$second_term = 2; 

$sum_of_all_numbers = 3;  # Sum of all the numbers in the sequence
$sum_of_even_numbers = 2; # Sum of all the even numbers in the sequence
$sum_of_odd_numbers = 1;  # Sum of all the odd numbers in the sequence

# Sequence starts with 1 and 2
print "1\n";
print "2\n";

for ($x = 3; $x <= ($max_terms); $x)
{
    $temp = $first_term + $second_term;
    $first_term = $second_term;
    $second_term = $temp;

    if ($second_term >= 4000000) {last;}

#    print "$second_term\n";
  
    $sum_of_all_numbers += $temp;

    if ($temp % 2) # Odd number
    {
        $sum_of_odd_numbers += $temp;
    }
    else  # Even number
    {
        $sum_of_even_numbers += $temp;
    }

    $x++;
} 

print "\nSum of the numbers\n\n";
print "Sum of even numbers = $sum_of_even_numbers\n";
print "Sum of odd numbers  = $sum_of_odd_numbers\n";
print "Sum of all numbers  = $sum_of_all_numbers\n";


exit 0;
